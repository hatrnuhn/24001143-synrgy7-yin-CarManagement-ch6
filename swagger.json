{
    "openapi": "3.1.0",
    "info": {
        "title": "Car Management API",
        "version": "0.1.0",
        "description": "Allows rentable cars managing through admin",
        "summary": "Car manager for Chapter 6 challenge"
    },
    "server": {
        "url": "http://localhost:3000",
        "description": "Development server"
    },
    "components": {
        "schemas": {
            "GeneralError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "GetCarAsAdminResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "plate": {
                        "type": "string"
                    },
                    "manufacture": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "transmission": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableDate": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "createdByAdmin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdBySuper": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "lastUpdatedByAdmin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastUpdatedBySuper": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deletedAt": {
                        "type": "string"
                    },
                    "deletedByAdmin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deletedBySUper": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "GetCarAsUserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "plate": {
                        "type": "string"
                    },
                    "manufacture": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "transmission": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableDate": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                }
            },
            "CreateCarRequestBody": {
                "type": "object",
                "properties": {
                    "plate": {
                        "type": "string"
                    },
                    "manufacture": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "transmission": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PatchCarRequestBody": {
                "type": "object",
                "properties": {
                    "plate": {
                        "type": "string"
                    },
                    "manufacture": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "transmission": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetUserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                }
            },
            "GetAdminResponse": {
                "type": "object",
                "properties": {
                    "adminId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type":"string"
                    }
                }
            },
            "GetSuperAdminResponse": {
                "type": "object",
                "properties": {
                    "superId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type":"string"
                    }
                }
            }, 
            "LoginAsAdminResponse": {
                "type": "object",
                "properties": {
                    "adminId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "LoginAsSuperResponse": {
                "type": "object",
                "properties": {
                    "superId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "LoginAsUserResponse": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            }, 
            "LoginRequestBody": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }, 
            "CreateUserRequestBody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "MakeAdminRequestBody": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CreateAdminRequestBody": {
                "type": "object",
                "properties": {
                    "admin": {
                        "type": "object",
                        "$ref": "#/components/schemas/CreateUserRequestBody"
                    }
                }
            },
            "PatchUserRequestBody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "CreateUserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }

                }
            },
            "MakeAdminResponse": {
                "type": "object",
                "properties": {
                    "adminId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        },
        "examples": {
            "LoginAsUserResponseExample": {
                "description": "Successfull user login example",
                "value": {
                    "userId": 1,
                    "email": "user1@ch6.com",
                    "username": "user1",
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImVtYWlsIjoidXNlcjFAY2g2LmNvbSIsInVzZXJuYW1lIjoidXNlcjEiLCJpYXQiOjE3MTcyNTIzMzQsImV4cCI6MTcxOTg0NDMzNH0.WNtQEfzLjJBXs-0f5C-MKnUpxxHyfPScvf-yRjq_adM"
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "in": "header",
                "name": "authorization"
            }            
        }
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "summary": "Authenticates a credential to the system",
                "description": "Authenticates a username and a password then returns a token for future authentication.",
                "parameters": [
                    {
                        "name": "as",
                        "in": "query",
                        "description": "Gives an option to log-in as super or admin.\n\nPossible values:\n```admin```\n```super```"
                    }
                ],
                "requestBody": {
                    "description": "Account credentials",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfull login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "description": "User login response",
                                            "$ref": "#/components/schemas/LoginAsUserResponse"
                                        },                                        {
                                            "description": "Admin login response",
                                            "$ref": "#/components/schemas/LoginAsAdminResponse"
                                        },
                                        {
                                            "description": "Super login response",
                                            "$ref": "#/components/schemas/LoginAsSuperResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "LoginAsUserResponseExample": {
                                        "$ref":"#/components/examples/LoginAsUserResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            }
        }, 
        "/api/admins": {
            "post": {
                "summary": "Promotes a user to admin or creates one then promotes it.",
                "description": "As a super admin, promote a user to admin or create one then promote it.",
                "requestBody": {
                    "description": "Account credentials",
                    "content": {

                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "description": "Request body to make a user an admin.",
                                        "$ref": "#/components/schemas/MakeAdminRequestBody"
                                    },
                                    {
                                        "description": "Request body to create a user then promote it as admin.",
                                        "$ref": "#/components/schemas/CreateAdminRequestBody"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfull create admin operation response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MakeAdminResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }            
                ]
            }
        },
        "/api/admins/{adminId}": {
            "delete": {
                "summary": "Demotes an admin to user.",
                "description": "Demotes an admin to user, does not delete the user account, and requires super admin authentication",
                "parameters": [
                    {
                        "description": "adminId of admin to demote",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Admin was demoted successfully"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "summary": "Retrieves a list of all users",
                "description": "Returns a list of all users, requires admin authentication.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetUserResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                       "BearerAuth": [] 
                    }
                ]
            },
            "post": {
                "summary": "Creates new user",
                "description": "Creates a new user and returns the created user if successfull",
                "requestBody": {
                    "description": "New user identities request body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }

                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Gets a user",
                "description": "Returns the specified user.\n\nAny user look-ups can only be done by admin, while a user can look-up themself by putting 'current' as the userId value instead.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "`Numeric` UserId value or `current` as value",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/examples/GetUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Patches a user",
                "description": "Takes a patch body and returns the patched user, requires user authentication.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "`Numeric` UserId value",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "$ref": "#/components/examples/GetUserResponse"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Soft-deletes the user.",
                "description": "Soft-deletes the user, returns nothing and requires an admin or user authentication.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "`Numeric` UserId value.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No-content return"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cars": {
            "get": {
                "summary": "Gets a list of all cars.",
                "description": "Gets a list of all cars as an admin/super, or a non-logged-in user.\nReturned cars object differs depending on the authentication.",
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "parameters": [
                    {
                        "name": "as",
                        "in": "query",
                        "description": "Gives an option to get cars as super or admin or non-authenticated.\n\nPossible values:\n```admin```\n```super```"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/GetCarAsAdminResponse"
                                            },
                                            {
                                                "$ref": "#/components/schemas/GetCarAsUserResponse"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new car",
                "description": "Creates a new car, admin authentication is required.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCarRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetCarAsAdminResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cars/{carId}": {
            "get": {
                "summary": "Gets a car",
                "description": "Returns the specified car.\nThe returned car object differs depending on the authentication.",
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "parameters": [
                    {
                        "name": "as",
                        "in": "query",
                        "description": "Gives an option to get the car as super or admin or non-authenticated.\n\nPossible values:\n```admin```\n```super```"
                    },
                    {
                        "description": "`Numeric` CarId value",
                        "name": "carId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/examples/GetCarAsUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Patches a car",
                "description": "Takes a patch body and returns the patched car, requires admin authentication.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "`Numeric` CarId value",
                        "name": "carId",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCarRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/GetCarAsAdminResponse"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Soft-deletes a car.",
                "description": "Soft-deletes the car, returns nothing and requires an admin.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "`Numeric` CarId value.",
                        "name": "carId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No-content return"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}